import { React$PropType$Primitive } from "flow2dts-flow-types-polyfill";
import $1 from "prop-types";
declare var LayoutPropTypes:
/*[FLOW2DTS - Warning] This type was an exact object type in the original Flow source.*/
{
  display: React$PropType$Primitive<"none" | "flex">;
  width: React$PropType$Primitive<number | string>;
  height: React$PropType$Primitive<number | string>;
  start: React$PropType$Primitive<number | string>;
  end: React$PropType$Primitive<number | string>;
  top: React$PropType$Primitive<number | string>;
  left: React$PropType$Primitive<number | string>;
  right: React$PropType$Primitive<number | string>;
  bottom: React$PropType$Primitive<number | string>;
  minWidth: React$PropType$Primitive<number | string>;
  maxWidth: React$PropType$Primitive<number | string>;
  minHeight: React$PropType$Primitive<number | string>;
  maxHeight: React$PropType$Primitive<number | string>;
  margin: React$PropType$Primitive<number | string>;
  marginVertical: React$PropType$Primitive<number | string>;
  marginHorizontal: React$PropType$Primitive<number | string>;
  marginTop: React$PropType$Primitive<number | string>;
  marginBottom: React$PropType$Primitive<number | string>;
  marginLeft: React$PropType$Primitive<number | string>;
  marginRight: React$PropType$Primitive<number | string>;
  marginStart: React$PropType$Primitive<number | string>;
  marginEnd: React$PropType$Primitive<number | string>;
  padding: React$PropType$Primitive<number | string>;
  paddingVertical: React$PropType$Primitive<number | string>;
  paddingHorizontal: React$PropType$Primitive<number | string>;
  paddingTop: React$PropType$Primitive<number | string>;
  paddingBottom: React$PropType$Primitive<number | string>;
  paddingLeft: React$PropType$Primitive<number | string>;
  paddingRight: React$PropType$Primitive<number | string>;
  paddingStart: React$PropType$Primitive<number | string>;
  paddingEnd: React$PropType$Primitive<number | string>;
  borderWidth: typeof $1.number;
  borderTopWidth: typeof $1.number;
  borderStartWidth: typeof $1.number;
  borderEndWidth: typeof $1.number;
  borderRightWidth: typeof $1.number;
  borderBottomWidth: typeof $1.number;
  borderLeftWidth: typeof $1.number;
  position: React$PropType$Primitive<"absolute" | "relative">;
  flexDirection: React$PropType$Primitive<"row" | "row-reverse" | "column" | "column-reverse">;
  flexWrap: React$PropType$Primitive<"wrap" | "nowrap" | "wrap-reverse">;
  justifyContent: React$PropType$Primitive<"flex-start" | "flex-end" | "center" | "space-between" | "space-around" | "space-evenly">;
  alignItems: React$PropType$Primitive<"flex-start" | "flex-end" | "center" | "stretch" | "baseline">;
  alignSelf: React$PropType$Primitive<"auto" | "flex-start" | "flex-end" | "center" | "stretch" | "baseline">;
  alignContent: React$PropType$Primitive<"flex-start" | "flex-end" | "center" | "stretch" | "space-between" | "space-around">;
  overflow: React$PropType$Primitive<"visible" | "hidden" | "scroll">;
  flex: typeof $1.number;
  flexGrow: typeof $1.number;
  flexShrink: typeof $1.number;
  flexBasis: React$PropType$Primitive<number | string>;
  aspectRatio: typeof $1.number;
  zIndex: typeof $1.number;
  direction: React$PropType$Primitive<"inherit" | "ltr" | "rtl">;
};
declare const $f2tExportDefault: typeof LayoutPropTypes;
export default $f2tExportDefault;